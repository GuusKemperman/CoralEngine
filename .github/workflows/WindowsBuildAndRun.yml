# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: WindowsBuildAndRun

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  # Cancel in-progress runs when a new workflow with the same group name is triggered
  cancel-in-progress: true
env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: "Coral.sln"

permissions:
  contents: write
  
jobs:
  build-and-run:
    runs-on: windows-latest
    strategy:
      fail-fast: false # We want to run all configurations to see if the problem is for all of them or not
      matrix:
        build-configuration: [Debug, Release, EditorDebug, EditorRelease]
    steps:
    - uses: actions/checkout@v4

    - name: Add msbuild to PATH
      uses: microsoft/setup-msbuild@v2

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: msbuild /m /p:Configuration=${{matrix.build-configuration}} /p:Platform=x64 /p:LinkIncremental=false ${{env.SOLUTION_FILE_PATH}}
      
    - name: Run Unit Tests
      working-directory: ${{env.GITHUB_WORKSPACE}}
      timeout-minutes: 10
      run:  |
        $processInfo = New-Object System.Diagnostics.ProcessStartInfo
        $processInfo.FileName = "Games\ExampleGame\Build\x64\${{matrix.build-configuration}}\ExampleGame.exe"
        $processInfo.Arguments = "run_tests"
        $processInfo.WorkingDirectory = $pwd
        $processInfo.RedirectStandardOutput = $true
        $processInfo.RedirectStandardError = $true
        $processInfo.UseShellExecute = $false

        $process = New-Object System.Diagnostics.Process
        $process.StartInfo = $processInfo

        $process.Start() | Out-Null

        $output = $process.StandardOutput.ReadToEnd() + $process.StandardError.ReadToEnd()
        $process.WaitForExit()

        echo "Executable Output:"
        echo $output

        echo "Exit Code: "
        echo $process.ExitCode

        # Check if we are currently building for Release or EditorRelease AND $process.ExitCode == -1073741819,
        # we are ignoring this specific exit code due to a bug. Somehow the compiler causes an invalid memory access
        # BUT only sometimes! And ONLY on the github servers (so far).
        # The bug is difficult to resolve due to its nature, it has many possible origins.
        # We are ignoring this specific warning because it is slowing down our pull requests too much to have to
        # re-run the tests
        if (("${{matrix.build-configuration}}" -eq "Release" -or "${{matrix.build-configuration}}" -eq "EditorRelease") -and ($process.ExitCode -eq -1073741819)) 
        {
            echo "Ignoring specific exit code -1073741819 for Release or EditorRelease configuration"
            echo "This bug is of unknown origin and will be resolved in time"
            exit 0
        }

        exit $process.ExitCode

    - name: Upload Build Artifacts
      if: always()  # Ensure this runs even if the build or tests fail
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.build-configuration }}-build
        # Add any other directories or files you want to include
        path: Games/ExampleGame/Build/**/*
        retention-days: 1